// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proba2.COnetxt;

#nullable disable

namespace Proba2.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240609121953_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Proba2.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("client");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "John",
                            LastName = "Doe"
                        });
                });

            modelBuilder.Entity("Proba2.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Adam",
                            LastName = "Nowak"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Aleksandra",
                            LastName = "Wiśniewska"
                        });
                });

            modelBuilder.Entity("Proba2.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FullfilledAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AcceptedAt = new DateTime(2024, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 1,
                            Comments = "Lorem ipsum ...",
                            EmployeeId = 2,
                            FullfilledAt = new DateTime(2024, 5, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AcceptedAt = new DateTime(2024, 5, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 1,
                            Comments = "Lorem ipsum ...",
                            EmployeeId = 1,
                            FullfilledAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AcceptedAt = new DateTime(2024, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ClientId = 2,
                            EmployeeId = 1
                        });
                });

            modelBuilder.Entity("Proba2.Models.OrderPastry", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("PastryId")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("OrderId", "PastryId");

                    b.HasIndex("PastryId");

                    b.ToTable("order_pastry");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            PastryId = 1,
                            Amount = 3
                        },
                        new
                        {
                            OrderId = 1,
                            PastryId = 3,
                            Amount = 4,
                            Comment = "Lorem ipsum ..."
                        },
                        new
                        {
                            OrderId = 2,
                            PastryId = 2,
                            Amount = 2
                        },
                        new
                        {
                            OrderId = 2,
                            PastryId = 1,
                            Amount = 12
                        });
                });

            modelBuilder.Entity("Proba2.Models.Pastry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("pastry");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drożdzówka",
                            Price = 3.3m,
                            Type = "A"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Babka cytrynowa",
                            Price = 21.23m,
                            Type = "B"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jagodzianka",
                            Price = 7.2m,
                            Type = "A"
                        });
                });

            modelBuilder.Entity("Proba2.Models.Order", b =>
                {
                    b.HasOne("Proba2.Models.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proba2.Models.Employee", "Employee")
                        .WithMany("Orders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Proba2.Models.OrderPastry", b =>
                {
                    b.HasOne("Proba2.Models.Order", null)
                        .WithMany("OrderPastries")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proba2.Models.Pastry", null)
                        .WithMany("OrderPastries")
                        .HasForeignKey("PastryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Proba2.Models.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Proba2.Models.Employee", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Proba2.Models.Order", b =>
                {
                    b.Navigation("OrderPastries");
                });

            modelBuilder.Entity("Proba2.Models.Pastry", b =>
                {
                    b.Navigation("OrderPastries");
                });
#pragma warning restore 612, 618
        }
    }
}
